//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/PlayerInput 2.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInput2: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInput2()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInput 2"",
    ""maps"": [
        {
            ""name"": ""Player2"",
            ""id"": ""0590e7ad-5e76-4bc7-943d-b83d86db358b"",
            ""actions"": [
                {
                    ""name"": ""MovePlayer2"",
                    ""type"": ""Value"",
                    ""id"": ""e06e1cb6-0f96-44bb-b28f-d83e42e2eb17"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": ""NormalizeVector2"",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""DashPlayer2"",
                    ""type"": ""Button"",
                    ""id"": ""2e519aef-f6bf-4cd9-9f44-3202a3ddb573"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ShieldPlayer2"",
                    ""type"": ""Button"",
                    ""id"": ""ac027f64-3dc3-49cd-8b16-84df90bb0341"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""BlinkPlayer2"",
                    ""type"": ""Button"",
                    ""id"": ""7099961d-3cac-4715-acb2-7521a2613f3a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""5b4c12e5-11bd-45de-866d-360ebca0c4d8"",
                    ""path"": ""<Gamepad>/{Primary2DMotion}"",
                    ""interactions"": """",
                    ""processors"": ""StickDeadzone(min=0.5)"",
                    ""groups"": ""Gamepad"",
                    ""action"": ""MovePlayer2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""a27470b8-a84a-4910-8760-98547a7d94b9"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MovePlayer2"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""5b28bfda-4201-4f62-a259-6aa88f47de8a"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""MovePlayer2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""ba579a7d-c6e9-4d07-b68e-676b55f0b8bf"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""MovePlayer2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""41f41313-6ecf-47ea-9fe2-dc5052443fa4"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""MovePlayer2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""d09d43e9-3072-4a68-8946-7f73c63f2e03"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""MovePlayer2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""096d78de-166f-45a6-a4b7-a0ab6ee77b4f"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""DashPlayer2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""237b6e7f-e279-401c-b3ae-5acb41310c23"",
                    ""path"": ""<Keyboard>/l"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""DashPlayer2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""80fd2236-e3c2-4ea5-bd95-4f0610d5e514"",
                    ""path"": ""<Keyboard>/semicolon"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""ShieldPlayer2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dc74416a-dcc0-41e3-b41b-19c471e613a2"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""ShieldPlayer2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8f5e466e-b670-42f1-8274-6e026eadc2bd"",
                    ""path"": ""<Keyboard>/rightShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""BlinkPlayer2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c865e6b0-3e7d-40fd-8a63-bb1554666ef7"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""BlinkPlayer2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Gamepad"",
            ""bindingGroup"": ""Gamepad"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Keyboard"",
            ""bindingGroup"": ""Keyboard"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": true,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // Player2
        m_Player2 = asset.FindActionMap("Player2", throwIfNotFound: true);
        m_Player2_MovePlayer2 = m_Player2.FindAction("MovePlayer2", throwIfNotFound: true);
        m_Player2_DashPlayer2 = m_Player2.FindAction("DashPlayer2", throwIfNotFound: true);
        m_Player2_ShieldPlayer2 = m_Player2.FindAction("ShieldPlayer2", throwIfNotFound: true);
        m_Player2_BlinkPlayer2 = m_Player2.FindAction("BlinkPlayer2", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player2
    private readonly InputActionMap m_Player2;
    private List<IPlayer2Actions> m_Player2ActionsCallbackInterfaces = new List<IPlayer2Actions>();
    private readonly InputAction m_Player2_MovePlayer2;
    private readonly InputAction m_Player2_DashPlayer2;
    private readonly InputAction m_Player2_ShieldPlayer2;
    private readonly InputAction m_Player2_BlinkPlayer2;
    public struct Player2Actions
    {
        private @PlayerInput2 m_Wrapper;
        public Player2Actions(@PlayerInput2 wrapper) { m_Wrapper = wrapper; }
        public InputAction @MovePlayer2 => m_Wrapper.m_Player2_MovePlayer2;
        public InputAction @DashPlayer2 => m_Wrapper.m_Player2_DashPlayer2;
        public InputAction @ShieldPlayer2 => m_Wrapper.m_Player2_ShieldPlayer2;
        public InputAction @BlinkPlayer2 => m_Wrapper.m_Player2_BlinkPlayer2;
        public InputActionMap Get() { return m_Wrapper.m_Player2; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(Player2Actions set) { return set.Get(); }
        public void AddCallbacks(IPlayer2Actions instance)
        {
            if (instance == null || m_Wrapper.m_Player2ActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_Player2ActionsCallbackInterfaces.Add(instance);
            @MovePlayer2.started += instance.OnMovePlayer2;
            @MovePlayer2.performed += instance.OnMovePlayer2;
            @MovePlayer2.canceled += instance.OnMovePlayer2;
            @DashPlayer2.started += instance.OnDashPlayer2;
            @DashPlayer2.performed += instance.OnDashPlayer2;
            @DashPlayer2.canceled += instance.OnDashPlayer2;
            @ShieldPlayer2.started += instance.OnShieldPlayer2;
            @ShieldPlayer2.performed += instance.OnShieldPlayer2;
            @ShieldPlayer2.canceled += instance.OnShieldPlayer2;
            @BlinkPlayer2.started += instance.OnBlinkPlayer2;
            @BlinkPlayer2.performed += instance.OnBlinkPlayer2;
            @BlinkPlayer2.canceled += instance.OnBlinkPlayer2;
        }

        private void UnregisterCallbacks(IPlayer2Actions instance)
        {
            @MovePlayer2.started -= instance.OnMovePlayer2;
            @MovePlayer2.performed -= instance.OnMovePlayer2;
            @MovePlayer2.canceled -= instance.OnMovePlayer2;
            @DashPlayer2.started -= instance.OnDashPlayer2;
            @DashPlayer2.performed -= instance.OnDashPlayer2;
            @DashPlayer2.canceled -= instance.OnDashPlayer2;
            @ShieldPlayer2.started -= instance.OnShieldPlayer2;
            @ShieldPlayer2.performed -= instance.OnShieldPlayer2;
            @ShieldPlayer2.canceled -= instance.OnShieldPlayer2;
            @BlinkPlayer2.started -= instance.OnBlinkPlayer2;
            @BlinkPlayer2.performed -= instance.OnBlinkPlayer2;
            @BlinkPlayer2.canceled -= instance.OnBlinkPlayer2;
        }

        public void RemoveCallbacks(IPlayer2Actions instance)
        {
            if (m_Wrapper.m_Player2ActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayer2Actions instance)
        {
            foreach (var item in m_Wrapper.m_Player2ActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_Player2ActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public Player2Actions @Player2 => new Player2Actions(this);
    private int m_GamepadSchemeIndex = -1;
    public InputControlScheme GamepadScheme
    {
        get
        {
            if (m_GamepadSchemeIndex == -1) m_GamepadSchemeIndex = asset.FindControlSchemeIndex("Gamepad");
            return asset.controlSchemes[m_GamepadSchemeIndex];
        }
    }
    private int m_KeyboardSchemeIndex = -1;
    public InputControlScheme KeyboardScheme
    {
        get
        {
            if (m_KeyboardSchemeIndex == -1) m_KeyboardSchemeIndex = asset.FindControlSchemeIndex("Keyboard");
            return asset.controlSchemes[m_KeyboardSchemeIndex];
        }
    }
    public interface IPlayer2Actions
    {
        void OnMovePlayer2(InputAction.CallbackContext context);
        void OnDashPlayer2(InputAction.CallbackContext context);
        void OnShieldPlayer2(InputAction.CallbackContext context);
        void OnBlinkPlayer2(InputAction.CallbackContext context);
    }
}
